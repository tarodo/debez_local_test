version: '3'
services:
  postgres:
    image: postgres:12
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db_scripts/:/db_scripts/
    command: postgres -c wal_level=logical
  
  kafka:
    image: docker.io/bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT

  debezium:
    build:
      context: ./debezium
      dockerfile: Dockerfile
    container_name: debezium
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_DBNAME: test
      DATABASE_SERVER_NAME: dbserver1
      DATABASE_INCLUDE_LIST: public.test
      DATABASE_HISTORY_KAFKA_TOPIC: dbhistory.test
      DATABASE_HISTORY_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
    volumes:
      - ./connectors:/kafka/connectors
    depends_on:
      - postgres
      - kafka

  debezium-ui:
    container_name: debezium-ui
    image: debezium/debezium-ui:latest
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CONNECT_URIS=http://debezium:8083
    depends_on:
      - debezium
